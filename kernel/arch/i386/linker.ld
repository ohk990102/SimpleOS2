/* The bootloader will look at this image and start execution at the symbol
   designated at the entry point. */
ENTRY(multiboot_entry)

/* Tell where the various sections of the object files will be put in the final
   kernel image. */
SECTIONS
{
	/** Higher Half Kernel **/
	. = 0xC0100000;

	_kernel_start = .;
	.text ALIGN(4K) : AT (ADDR (.text) - 0xC0000000)
	{
		*(.multiboot)
		*(.text)
	}

	/* Read-only data. */
	.rodata ALIGN(4K) : AT (ADDR (.rodata) - 0xC0000000)
	{
		*(.rodata)
	}

	/* Read-write data (initialized) */
	.data ALIGN(4K) : AT (ADDR (.data) - 0xC0000000)
	{
		*(.data)
	}

	/* Read-write data (uninitialized) and stack */
	.bss ALIGN(4K) : AT (ADDR (.bss) - 0xC0000000)
	{
		*(COMMON)
		*(.bss)
		*(.bootstrap_stack)
	}
	_kernel_end = .;

	. = 0xC1000000;
	.pool ALIGN(4K) : AT (ADDR (.pool) - 0xC0000000)
	{
		*(.StackPool)
		*(.TCBPool)
	}

	/* The compiler may produce other sections, put them in the proper place in
	   in this file, if you'd like to include them in the final kernel. */
}